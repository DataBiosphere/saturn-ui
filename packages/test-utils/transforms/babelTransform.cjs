// This file was originally generated by Create React App,
// then modified to handle import.meta.env.
/* eslint-disable */
'use strict';

const template = require('@babel/template').default;
const babelJest = require('babel-jest').default;

const hasJsxRuntime = (() => {
  if (process.env.DISABLE_NEW_JSX_TRANSFORM === 'true') {
    return false;
  }

  try {
    require.resolve('react/jsx-runtime');
    return true;
  } catch (e) {
    return false;
  }
})();

// Vite exposes environment variables on import.meta.env.
// Jest compiles modules to CommonJS, where attempting to access import.meta.env
// results in "SyntaxError: Cannot use 'import.meta' outside a module".
// This replaces import.meta with an object containing an env object.
const importMetaEnvPlugin = () => {
  const env = {};
  const ast = template.ast(`({env: ${JSON.stringify(env)}})`);
  return {
    visitor: {
      MetaProperty(path, state) {
        path.replaceWith(ast);
      },
    },
  };
};

module.exports = babelJest.createTransformer({
  plugins: [importMetaEnvPlugin],
  presets: [
    [
      require.resolve('babel-preset-react-app'),
      {
        runtime: hasJsxRuntime ? 'automatic' : 'classic',
      },
    ],
  ],
  babelrc: false,
  configFile: false,
});
